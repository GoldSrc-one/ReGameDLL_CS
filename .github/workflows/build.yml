name: C/C++ CI
permissions:
  contents: write

on:
  push:
    branches: [master]
    paths-ignore:
      - '**.md'

  pull_request:
    types: [opened, reopened, synchronize]
  release:
    types: [published]

jobs:
  windows:
    name: 'Windows'
    runs-on: windows-2019

    env:
      solution: 'msvc/ReGameDLL.sln'
      buildPlatform: 'Win32'
      buildRelease: 'Release'
      buildReleasePlay: 'Release Play'
      buildTests: 'Tests'

    steps:
      - name: Configure
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '16'

      - name: Build and Run unittests
        run: |
          msbuild ${{ env.solution }} -p:Configuration="${{ env.buildTests }}" /t:Clean,Build /p:Platform=${{ env.buildPlatform }} /p:PlatformToolset=v140_xp /p:XPDeprecationWarning=false
          .\"msvc\Tests\mp.exe"
          If ($LASTEXITCODE -ne 0 -And
          $LASTEXITCODE -ne 3)
          {[Environment]::Exit(1)}
        shell: "pwsh"

      - name: Build
        run: |
          msbuild ${{ env.solution }} -p:Configuration="${{ env.buildRelease }}" /t:Clean,Build /p:Platform=${{ env.buildPlatform }} /p:PlatformToolset=v140_xp /p:XPDeprecationWarning=false
          msbuild ${{ env.solution }} -p:Configuration="${{ env.buildReleasePlay }}" /t:Clean,Build /p:Platform=${{ env.buildPlatform }} /p:PlatformToolset=v140_xp /p:XPDeprecationWarning=false

      - name: Move files
        run: |
          mkdir publish
          move msvc\${{ env.buildRelease }}\mp.dll publish\mp.dll
          move msvc\${{ env.buildRelease }}\mp.pdb publish\mp.pdb

      - name: Deploy artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win32
          path: publish/*

  publish:
    name: 'Publish'
    runs-on: ubuntu-latest
    needs: [windows]

    steps:
      - name: Deploying windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: win32

      - name: Publish artifacts
        uses: softprops/action-gh-release@v2
        id: publish-job
        if: |
          startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.dll
            *.pdb
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN }}

